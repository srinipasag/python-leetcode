

#######not accepted 

def longestPalindrome(self, s):
        
        """
        :type s: str
        :rtype: str
        """
        start_index,length,ret = 0,"",""
        #odd case 
        for i in range(len(s)):
            ret = self.isPalindrome(s, i, i)
            if len(length) < len(ret):
                length = ret
                 
        #even case 
        for i in range(len(s)):
            ret = self.isPalindrome(s, i, i+1)
            if len(length) < len(ret):
                length = ret
                
        return length
    
    def isPalindrome(self, s, start, end):
        mylen = 0
        print (s)
        #while ((start >= 0 and end < len(s)) and (s[start] = s[end])):
        while start >=0 and end < len(s) and s[start] == s[end]:
                print ("start   "  "end " "s    ", start, end, s)
                mylen = end - start +1
                start -= 1
                end += 1
           
        return s[start+1:end]
